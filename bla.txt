
running 20 tests
test parser::tests::array ... ok
test parser::tests::assignment ... ok
test parser::tests::f ... ok
test parser::tests::for_ ... ok
test parser::tests::expr ... ok
test parser::tests::if_ ... ok
test parser::tests::parse_for ... ok
test parser::tests::parse_macros ... ok
test parser::tests::general ... ok
test parser::tests::parse_macros_call ... ok
test parser::tests::variable ... ok
test parser::tests::string_positive ... ok
test tests::infer_binary ... ok
test tests::infer_example2 ... FAILED
test tests::infer_nullary ... ok
test tests::infer_number ... ok
test tests::infer_string ... ok
test tests::infer_unary ... ok
test tests::infer_variable ... ok
test tests::infer_example ... ok

failures:

---- tests::infer_example2 stdout ----
"tests/dictionary/macros.hpp"
Span { inner: "ISOBJECT", span: (367, 375) }
Span { inner: "EFUNC", span: (449, 454) }
Span { inner: "EFUNC", span: (785, 790) }
Span { inner: "EFUNC", span: (830, 835) }
{
    Span {
        inner: "_serialize_single",
        span: (
            185,
            202,
        ),
    }: Some(
        Code,
    ),
    Span {
        inner: "_complete_key",
        span: (
            268,
            281,
        ),
    }: Some(
        Array,
    ),
    Span {
        inner: "_x_value",
        span: (
            860,
            868,
        ),
    }: None,
    Span {
        inner: "_copy",
        span: (
            817,
            822,
        ),
    }: Some(
        Anything,
    ),
    Span {
        inner: "_x_value",
        span: (
            492,
            500,
        ),
    }: None,
}
thread 'tests::infer_example2' panicked at 'explicit panic', src/lib.rs:159:9
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace


failures:
    tests::infer_example2

test result: FAILED. 19 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.10s

